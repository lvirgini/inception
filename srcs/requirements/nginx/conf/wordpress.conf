
# etc/nginx/sites-available/default 

server {   
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        server_name $DOMAIN_NAME;
        
        ssl on;
        ssl_protocols TLSv1.3;
        ssl_certificate 	/etc/ssl/certs/inception_cert.pem;
        ssl_certificate_key     /etc/ssl/private/inception_key.pem;
        ssl_dhparam 		/etc/nginx/dhparam.pem;

        autoindex on;
       
        root /var/www/wordpress;
        index index.php index.html index.htm;


        location / {
                try_files $uri $uri/ =404;
        }

    # pass the PHP scripts to FastCGI server listening on wordpress:9000
        # "fastcgi_pass wordpress:9000"
        #  It tells Nginx to forward requests for PHP files to the PHP container's 
        #       port 9000, which is the default port PHP-FPM listens on.
        #  Internally, Docker Compose will automatically resolve the php keyword 
        #  to whatever private IP address it assigned to the PHP container.
        
        # This is another great feature of Docker Compose: at start-up, 
        # it will automatically set up an internal network on which each container
        #  is discoverable via its service's name.
        
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass wordpress:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        }

# #   DIGITAL OCEAN
# location ~ /\.ht: This block will handle .htaccess files since Nginx wonâ€™t serve them. The deny_all directive ensures that .htaccess files will never be served to users.
# location = /favicon.ico, location = /robots.txt: These blocks ensure that requests to /favicon.ico and /robots.txt will not be logged.
# location ~* \.(css|gif|ico|jpeg|jpg|js|png)$: This block turns off logging for static asset requests and ensures that these assets are highly cacheable, as they are typically expensive to serve.
        # location ~ /\.ht {
        #         deny all;
        # }
        
        # location = /favicon.ico { 
        #         log_not_found off; access_log off; 
        # }
        # location = /robots.txt { 
        #         log_not_found off; access_log off; allow all; 
        # }
        # location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
        #         expires max;
        #         log_not_found off;
        # }

}